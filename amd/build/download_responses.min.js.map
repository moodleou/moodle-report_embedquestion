{"version":3,"file":"download_responses.min.js","sources":["../src/download_responses.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for download responses event.\n *\n * @copyright 2021 The Open University\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery'], function($) {\n\n    const t = {\n\n        /**\n         * CSS Selector.\n         */\n        SELECTOR: {\n            ATTEMPT_CHECKBOX: '[name=\"questionusageid[]\"]',\n            BUTTON_DOWNLOAD_SELECT: '#downloadselectedattemptsbutton',\n            BUTTON_DOWNLOAD_ALL: '#downloadallattemptsbutton'\n        },\n\n        /**\n         * Initialise function\n         */\n        init: function() {\n            let totalChecked = 0;\n            let allowDownloadAll = 0;\n\n            $(t.SELECTOR.ATTEMPT_CHECKBOX).each(function() {\n                let allowDownload = t.isAllowDownloading(this);\n                if (allowDownload) {\n                    allowDownloadAll = true;\n                }\n            });\n\n            $(t.SELECTOR.BUTTON_DOWNLOAD_ALL).prop('disabled', !allowDownloadAll);\n\n            $(t.SELECTOR.ATTEMPT_CHECKBOX).change(function() {\n                let allowDownload = t.isAllowDownloading(this);\n                if (allowDownload) {\n                    if (this.checked) {\n                        totalChecked++;\n                    } else {\n                        totalChecked--;\n                    }\n                }\n                $(t.SELECTOR.BUTTON_DOWNLOAD_SELECT).prop('disabled', !(totalChecked > 0));\n            });\n        },\n\n        /**\n         * Check that the element is allow to download or not\n         * @param {jquery} element Element to check\n         */\n        isAllowDownloading: function(element) {\n            let checkBox = $(element);\n            let questionUsageMeta = checkBox.val().split('-');\n            return questionUsageMeta[2] == 1;\n        }\n    };\n\n    return t;\n});\n"],"names":["define","$","t","SELECTOR","ATTEMPT_CHECKBOX","BUTTON_DOWNLOAD_SELECT","BUTTON_DOWNLOAD_ALL","init","totalChecked","allowDownloadAll","each","isAllowDownloading","this","prop","change","checked","element","val","split"],"mappings":";;;;;;AAqBAA,iDAAO,CAAC,WAAW,SAASC,SAElBC,EAAI,CAKNC,SAAU,CACNC,iBAAkB,6BAClBC,uBAAwB,kCACxBC,oBAAqB,8BAMzBC,KAAM,eACEC,aAAe,EACfC,iBAAmB,EAEvBR,EAAEC,EAAEC,SAASC,kBAAkBM,MAAK,WACZR,EAAES,mBAAmBC,QAErCH,kBAAmB,MAI3BR,EAAEC,EAAEC,SAASG,qBAAqBO,KAAK,YAAaJ,kBAEpDR,EAAEC,EAAEC,SAASC,kBAAkBU,QAAO,WACdZ,EAAES,mBAAmBC,QAEjCA,KAAKG,QACLP,eAEAA,gBAGRP,EAAEC,EAAEC,SAASE,wBAAwBQ,KAAK,aAAcL,aAAe,QAQ/EG,mBAAoB,SAASK,gBAGM,GAFhBf,EAAEe,SACgBC,MAAMC,MAAM,KACpB,YAI1BhB"}